#=================================================
# Description: Build ubports using GitHub Actions
# Lisence: MIT
#=================================================

name: Build System Image

on: [workflow_dispatch]

env:
  SSH_ACTIONS: false

jobs:

  build:
    runs-on: ubuntu-16.04

    env:
      DEVICE: onyx
      ANDROID_ROOT: /home/runner/work/b2g/

    steps:
    - name: Checkout
      uses: actions/checkout@master
    
    - name: Initializing environment
      run: |
        sudo apt-get update
        sudo dpkg --add-architecture i386
        sudo dpkg --add-architecture amd64
        sudo apt-get install -y  --no-install-recommends autoconf2.13 \
        bison bzip2 ccache curl flex gawk gcc g++ g++-multilib git lib32ncurses5-dev \
        lib32z1-dev libgconf2-dev \
        libgl1-mesa-dev libx11-dev make zip lzop libxml2-utils \
        openjdk-8-jdk nodejs unzip python
        sudo apt-get install -y \
        openjdk-8-jdk android-tools-adb bc  \
        bison build-essential curl flex g++-multilib m4 libxml2-utils \
        gcc-multilib gnupg gperf imagemagick lib32ncurses5-dev \
        lib32readline-dev lib32z1-dev libesd0-dev liblz4-tool flex \
        libncurses5-dev libsdl1.2-dev libssl-dev repo libwxgtk3.0-dev \
        libxml2 libxml2-utils lzop pngcrush rsync schedtool ccache bison \
        squashfs-tools xsltproc yasm zip zlib1g-dev git
        sudo docker rmi `docker images -q`
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        mkdir -p ~/bin
        wget 'https://storage.googleapis.com/git-repo-downloads/repo' -P ~/bin
        chmod +x ~/bin/repo
        git config --global user.name "ittat"
        git config --global user.email "ittat@github.com"
        sudo apt autoremove -y
        sudo apt clean


    - name: Downloading source code
      run: |
        source b2g.env
        mkdir -p $ANDROID_ROOT
        cd $ANDROID_ROOT
        git clone https://github.com/b2g2onyxL/B2G -b b2g/cm-12.1
        cd $ANDROID_ROOT/B2G
        ./config.sh onyx

    - name: Modding source code
      run: |
        source b2g.env
        cp /usr/bin/ld.gold   $ANDROID_ROOT/B2G/prebuilts/gcc/linux-x86/host/x86_64-linux-glibc2.11-4.6/x86_64-linux/bin/ld 
        chmod +x $ANDROID_ROOT/B2G/kernel/oneplus/onyx/scripts/gcc-wrapper.py
        chmod +x $ANDROID_ROOT/B2G/gecko/build/autoconf/config.guess
        chmod +x $ANDROID_ROOT/B2G/gecko/mach
        export SHELL=/bin/bash
        
    - name: Building B2GOS
      run: |
        source b2g.env
        cd $ANDROID_ROOT/B2G
        export SHELL=/bin/bash
        export DISABLE_SOURCES_XML=true
        export USE_CCACHE=1
        export B2G_FOTA_FULLIMG_PARTS="/boot:boot.img /system:system.img"
        export B2G_SYSTEM_APPS=1
        export B2G_UPDATE_CHANNEL=default
        export MOZ_TELEMETRY_REPORTING=1
        export MOZ_CRASHREPORTER_NO_REPORT=1 
        export ENABLE_DEFAULT_BOOTANIMATION=true
        export DOGFOOD=0
        export VARIANT=eng
        export DEVICE_DEBUG=1
        export SCREEN_TIMEOUT=0
        export NOFTU=1
        export NO_LOCK_SCREEN=1
        export MOZILLA_OFFICIAL=1
        export GAIA_DISTRIBUTION_DIR=distros/spark
        export GAIA_DEV_PIXELS_PER_PX=2.25
        ./build.sh -j$(nproc) gecko-update-fota-fullimg
        
    - name : Uploading update.zip
      uses: actions/upload-artifact@master
      with:
        name: update.zip
        path: /home/runner/work/b2g/B2G/out/target/product/onyx/fota/fullimg/update.zip
